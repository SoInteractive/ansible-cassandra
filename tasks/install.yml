---

- name: Install dependencies
  package:
    name: python-pip
    state: present
  delegate_to: "{{ groups[cassandra_hosts_group][0] }}"
  run_once: true

- name: Install cqlsh on first node
  pip:
    name: cqlsh
  delegate_to: "{{ groups[cassandra_hosts_group][0] }}"
  run_once: true

- name: Ensure cassandra system group exists
  group:
    name: cassandra
    state: present
    system: yes

- name: Ensure cassandra system user exists
  user:
    name: "{{ cassandra_system_user }}"
    state: present
    shell: /usr/sbin/nologin
    system: yes
    group: "{{ cassandra_system_group}}"
    createhome: no

- name: Make sure cassandra dirs exist
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ cassandra_system_user }}"
    group: "{{ cassandra_system_group }}"
    mode: 0644
  with_items:
    - "{{ cassandra_data_dir }}"
    - "{{ cassandra_config_dir }}"

- name: Configure cassandra
  template:
    src: cassandra.yaml.j2
    dest: "{{ cassandra_config_dir }}/cassandra.yaml"
    owner: "{{ cassandra_system_user }}"
    group: "{{ cassandra_system_group }}"
    mode: 0644

- name: Download and run Cassandra instance
  docker_container:
    name: cassandra
    image: "cassandra:{{ cassandra_version }}"
    state: started
    network_mode: host
    restart_policy: unless-stopped
    entrypoint: "cassandra -f"
    ports:
      - "7000:7000"
      - "9042:9042"
    volumes:
      - "{{ cassandra_data_dir }}:/var/lib/cassandra:rw"
      - "{{ cassandra_config_dir }}/cassandra.yaml:/etc/cassandra/cassandra.yaml:ro"
#  notify: tests