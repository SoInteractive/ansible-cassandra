---

- name: Install dependencies
  package:
    name: "{{ item }}"
    state: present
  delegate_to: "{{ ansible_play_hosts[0] }}"
  run_once: true
  with_items:
  - python-dev
  - libpq-dev
  - libxml2-dev
  - libxslt1-dev
  - libldap2-dev
  - libsasl2-dev
  - libffi-dev

- name: Install cqlsh on first node
  pip:
    name: cqlsh
  delegate_to: "{{ ansible_play_hosts[0] }}"
  run_once: true

- name: Ensure cassandra system group exists
  group:
    name: cassandra
    state: present
    system: yes

- name: Ensure cassandra system user exists
  user:
    name: "{{ cassandra_system_user }}"
    state: present
    shell: /usr/sbin/nologin
    system: yes
    group: "{{ cassandra_system_group }}"
    createhome: no

- name: Configure cassandra
  template:
    src: cassandra.yaml.j2
    dest: /tmp/cassandra.yaml
    owner: "{{ cassandra_system_user }}"
    group: "{{ cassandra_system_group }}"
    mode: 0644

- name: Download Cassandra instance
  docker_container:
    name: cassandra
    image: "cassandra:{{ cassandra_version }}"
    state: present
    network_mode: host
    restart_policy: unless-stopped
    entrypoint: "cassandra -f"
    ports:
      - "7000:7000"
      - "9042:9042"
    volumes:
      - cassandra_data_dir:/var/lib/cassandra:rw
      - cassandra_config_dir:/etc/cassandra:rw

- name: Copy conf files to container
  command: docker cp /tmp/cassandra.yaml cassandra:/etc/cassandra/cassandra.yaml
  changed_when: false

- name: Download and run Cassandra instance
  docker_container:
    name: cassandra
    image: "cassandra:{{ cassandra_version }}"
    labels:
      namespace: database
    state: started
    network_mode: host
    restart_policy: unless-stopped
    entrypoint: "cassandra -f"
    ports:
      - "7000:7000"
      - "9042:9042"
    volumes:
      - cassandra_data_dir:/var/lib/cassandra:rw
      - cassandra_config_dir:/etc/cassandra:rw
  register: container
